// import { useEffect, useState } from "react";
// import { useSelector } from "react-redux";
// import "./OrderTracking.css"; // Import CSS ri√™ng

// const OrderTracking = () => {
//   const { role } = useSelector((state) => state.user);
//   const [orders, setOrders] = useState([]);
//   const [loading, setLoading] = useState(true);
//   const [error, setError] = useState("");

//   useEffect(() => {
//     if (role === "staff") {
//       fetch("https://phamdangtuc-001-site1.ntempurl.com/api/Orders")
//         .then((res) => res.json())
//         .then((data) => {
//           console.log("üì¶ API Response:", data);
//           if (data?.$values) {
//             setOrders(data.$values); // L·∫•y danh s√°ch ƒë∆°n h√†ng t·ª´ API
//           } else {
//             setError("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!");
//           }
//         })
//         .catch((err) => {
//           console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:", err);
//           setError("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu ƒë∆°n h√†ng!");
//         })
//         .finally(() => setLoading(false));
//     }
//   }, [role]);

//   if (role !== "staff") return <h1 className="error">‚ö† B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h1>;
//   if (loading) return <p className="loading">‚è≥ ƒêang t·∫£i...</p>;
//   if (error) return <p className="error">‚ùå {error}</p>;

//   return (
//     <div className="order-tracking-container">
//       <h1>üì¶ Danh S√°ch ƒê∆°n H√†ng</h1>
//       {orders.length > 0 ? (
//         <table className="order-table">
//           <thead>
//             <tr>
//               <th>ID</th>
//               <th>Ng∆∞·ªùi Nh·∫≠n</th>
//               <th>ƒê·ªãa Ch·ªâ</th>
//               <th>Ph∆∞∆°ng Th·ª©c Giao</th>
//               <th>Gi√°</th>
//               <th>S·ªë L∆∞·ª£ng</th>
//               <th>T·ªïng Ti·ªÅn</th>
//               <th>Ghi Ch√∫</th>
//               <th className="border border-gray-300 px-4 py-2">Chi Ti·∫øt</th>
//             </tr>
//           </thead>
//           <tbody>
//             {orders.map((order, index) => (
//               <tr key={index}>
//                 <td>{order.orderId}</td>
//                 <td>{order.recipientName}</td>
//                 <td>{order.deliveryAddress}</td>
//                 <td>{order.shippingMethod}</td>
//                 <td>{order.price} VND</td>
//                 <td>{order.quantity}</td>
//                 <td>{order.totalPrice} VND</td>
//                 <td>{order.notes || "Kh√¥ng c√≥"}</td>
//                 <td className="border border-gray-300 px-4 py-2">
//                   <button className="bg-blue-500 text-white px-3 py-1 rounded">Chi ti·∫øt</button>
//                 </td>
//               </tr>
//             ))}
//           </tbody>
//         </table>
//       ) : (
//         <p className="no-orders">üö´ Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</p>
//       )}
//     </div>
//   );
// };

// export default OrderTracking;


// import { useEffect, useState } from "react";
// import { useSelector } from "react-redux";
// import "./OrderTracking.css"; // Import CSS ri√™ng

// const OrderTracking = () => {
//   const { role } = useSelector((state) => state.user);
//   const [orders, setOrders] = useState([]);
//   const [loading, setLoading] = useState(true);
//   const [error, setError] = useState("");
//   const [selectedOrder, setSelectedOrder] = useState(null);
//   const [orderProducts, setOrderProducts] = useState([]); // L∆∞u danh s√°ch s·∫£n ph·∫©m

//   useEffect(() => {
//     if (role === "staff") {
//       fetch("https://phamdangtuc-001-site1.ntempurl.com/api/Orders")
//         .then((res) => res.json())
//         .then((data) => {
//           console.log("üì¶ API Response:", data);
//           if (data?.$values) {
//             setOrders(data.$values); // L·∫•y danh s√°ch ƒë∆°n h√†ng t·ª´ API
//           } else {
//             setError("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!");
//           }
//         })
//         .catch((err) => {
//           console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:", err);
//           setError("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu ƒë∆°n h√†ng!");
//         })
//         .finally(() => setLoading(false));
//     }
//   }, [role]);

//   // L·∫•y danh s√°ch s·∫£n ph·∫©m theo orderId
//   // const handleShowDetails = (order) => {
//   //   setSelectedOrder(order);

//   //   fetch(`https://phamdangtuc-001-site1.ntempurl.com/api/Orders/${order.orderId}/products`)
//   //     .then((res) => res.json())
//   //     .then((data) => {
//   //       console.log(`üõí S·∫£n ph·∫©m c·ªßa ƒë∆°n ${order.orderId}:`, data);
//   //       setOrderProducts(data?.$values || []);
//   //     })
//   //     .catch((err) => {
//   //       console.error("‚ùå L·ªói khi t·∫£i s·∫£n ph·∫©m:", err);
//   //       setOrderProducts([]);
//   //     });
//   // };
//   const handleShowDetails = (order) => {
//     setSelectedOrder(order);
//     setOrderProducts(order.product || []); // Reset danh s√°ch s·∫£n ph·∫©m c≈©
  
//     fetch(`https://phamdangtuc-001-site1.ntempurl.com/api/OrderDetails?orderId=${order.orderId}`)
    
//       .then((res) => {
//         if (!res.ok) {
//           throw new Error(`L·ªói ${res.status}: API kh√¥ng t·ªìn t·∫°i`);
//         }
//         return res.json();
//       })
//       .then((data) => {
//         console.log(`üõí S·∫£n ph·∫©m c·ªßa ƒë∆°n ${order.orderId}:`, data);
//         setOrderProducts(data?.$values || []);
//       })
//       .catch((err) => {
//         console.error("‚ùå L·ªói khi t·∫£i s·∫£n ph·∫©m:", err);
//         setOrderProducts([]); // N·∫øu l·ªói th√¨ kh√¥ng hi·ªÉn th·ªã s·∫£n ph·∫©m
//       });
//   };
  

//   if (role !== "staff") return <h1 className="error">‚ö† B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h1>;
//   if (loading) return <p className="loading">‚è≥ ƒêang t·∫£i...</p>;
//   if (error) return <p className="error">‚ùå {error}</p>;

//   return (
//     <div className="order-tracking-container">
//       <h1>üì¶ Danh S√°ch ƒê∆°n H√†ng</h1>
//       {orders.length > 0 ? (
//         <table className="order-table">
//           <thead>
//             <tr>
//               <th>ID</th>
//               <th>Ng∆∞·ªùi Nh·∫≠n</th>
//               <th>ƒê·ªãa Ch·ªâ</th>
//               <th>Ph∆∞∆°ng Th·ª©c Giao</th>
//               <th>Gi√°</th>
//               <th>S·ªë L∆∞·ª£ng</th>
//               <th>T·ªïng Ti·ªÅn</th>
//               <th>Ghi Ch√∫</th>
//               <th>Chi Ti·∫øt</th>
//             </tr>
//           </thead>
//           <tbody>
//             {orders.map((order, index) => (
//               <tr key={index}>
//                 <td>{order.orderId}</td>
//                 <td>{order.recipientName}</td>
//                 <td>{order.deliveryAddress}</td>
//                 <td>{order.shippingMethod}</td>
//                 <td>{order.price} VND</td>
//                 <td>{order.quantity}</td>
//                 <td>{order.totalPrice} VND</td>
//                 <td>{order.notes || "Kh√¥ng c√≥"}</td>
//                 <td>
//                   <button
//                     className="bg-blue-500 text-white px-3 py-1 rounded"
//                     onClick={() => handleShowDetails(order)}
//                   >
//                     Chi ti·∫øt
//                   </button>
//                 </td>
//               </tr>
//             ))}
//           </tbody>
//         </table>
//       ) : (
//         <p className="no-orders">üö´ Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</p>
//       )}

//       {/* Modal hi·ªÉn th·ªã chi ti·∫øt ƒë∆°n h√†ng */}
//       {selectedOrder && (
//         <div className="modal-overlay">
//           <div className="modal-content">
//             <h2>üõç Chi Ti·∫øt ƒê∆°n H√†ng</h2>
//             <p><strong>ID:</strong> {selectedOrder.orderId}</p>
//             <p><strong>Ng∆∞·ªùi Nh·∫≠n:</strong> {selectedOrder.recipientName}</p>
//             <p><strong>ƒê·ªãa Ch·ªâ:</strong> {selectedOrder.deliveryAddress}</p>
//             <p><strong>Ph∆∞∆°ng Th·ª©c Giao:</strong> {selectedOrder.shippingMethod}</p>
//             <p><strong>T·ªïng Ti·ªÅn:</strong> {selectedOrder.totalPrice} VND</p>

//             <h3>üìå S·∫£n Ph·∫©m Trong ƒê∆°n:</h3>
//             {orderProducts.length === 0 ? (
//               <p className="text-gray-500">Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong ƒë∆°n h√†ng n√†y.</p>
//             ) : (
//               <ul>
//                 {orderProducts.map((product) => (
//                   <li key={product.productId}>
//                     {product.name} - {product.price} VND (x{product.quantity})
//                   </li>
//                 ))}
//               </ul>
//             )}

//             <button className="close-btn" onClick={() => setSelectedOrder(null)}>ƒê√≥ng</button>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// };

// export default OrderTracking;

// import { useEffect, useState } from "react";
// import { useSelector } from "react-redux";
// import "./OrderTracking.css";

// const OrderTracking = () => {
//   const { role } = useSelector((state) => state.user);
//   const [orders, setOrders] = useState([]);
//   const [orderProducts, setOrderProducts] = useState([]); // üõí Danh s√°ch s·∫£n ph·∫©m trong ƒë∆°n h√†ng
//   const [selectedOrderId, setSelectedOrderId] = useState(null); // L∆∞u orderId ƒëang xem

//   useEffect(() => {
//     if (role === "staff") {
//       fetch("https://phamdangtuc-001-site1.ntempurl.com/api/Orders")
//         .then((res) => res.json())
//         .then((data) => {
//           if (data?.$values) {
//             setOrders(data.$values);
//           } else {
//             console.error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!");
//           }
//         })
//         .catch((err) => console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:", err));
//     }
//   }, [role]);

//   const handleShowDetails = (orderId) => {
//     setSelectedOrderId(orderId); // L∆∞u ƒë∆°n h√†ng ƒëang xem

//     fetch(`https://phamdangtuc-001-site1.ntempurl.com/api/Product`)
//       .then((res) => {
//         if (!res.ok) throw new Error(`L·ªói ${res.status}: API kh√¥ng t·ªìn t·∫°i`);
//         return res.json();
//       })
//       .then((data) => {
//         console.log(`üõí S·∫£n ph·∫©m c·ªßa ƒë∆°n ${orderId}:`, data);
//         setOrderProducts(data?.$values || []);
//       })
//       .catch((err) => {
//         console.error("‚ùå L·ªói khi t·∫£i s·∫£n ph·∫©m:", err);
//         setOrderProducts([]); // N·∫øu l·ªói th√¨ kh√¥ng hi·ªÉn th·ªã s·∫£n ph·∫©m
//       });
//   };

//   if (role !== "staff") return <h1 className="error">‚ö† B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h1>;

//   return (
//     <div className="order-tracking-container">
//       <h1>üì¶ Danh S√°ch ƒê∆°n H√†ng</h1>
//       {orders.length > 0 ? (
//         <table className="order-table">
//           <thead>
//             <tr>
//               <th>ID</th>
//               <th>Ng∆∞·ªùi Nh·∫≠n</th>
//               <th>ƒê·ªãa Ch·ªâ</th>
//               <th>Ph∆∞∆°ng Th·ª©c Giao</th>
//               <th>Gi√°</th>
//               <th>S·ªë L∆∞·ª£ng</th>
//               <th>T·ªïng Ti·ªÅn</th>
//               <th>Ghi Ch√∫</th>
//               <th>Chi Ti·∫øt</th>
//             </tr>
//           </thead>
//           <tbody>
//             {orders.map((order) => (
//               <tr key={order.orderId}>
//                 <td>{order.orderId}</td>
//                 <td>{order.recipientName}</td>
//                 <td>{order.deliveryAddress}</td>
//                 <td>{order.shippingMethod}</td>
//                 <td>{order.price} VND</td>
//                 <td>{order.quantity}</td>
//                 <td>{order.totalPrice} VND</td>
//                 <td>{order.notes || "Kh√¥ng c√≥"}</td>
//                 <td>
//                   <button 
//                     className="bg-blue-500 text-white px-3 py-1 rounded"
//                     onClick={() => handleShowDetails(order.orderId)}
//                   >
//                     Chi ti·∫øt
//                   </button>
//                 </td>
//               </tr>
//             ))}
//           </tbody>
//         </table>
//       ) : (
//         <p className="no-orders">üö´ Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</p>
//       )}

//       {/* üõí Hi·ªÉn th·ªã gi·ªè h√†ng khi b·∫•m "Chi ti·∫øt" */}
//       {selectedOrderId && (
//         <div className="cart-container">
//           <h2>üõí S·∫£n ph·∫©m c·ªßa ƒë∆°n {selectedOrderId}</h2>
//           {orderProducts.length > 0 ? (
//             <ul className="cart-list">
//               {orderProducts.map((product) => (
//                 <li key={product.productId} className="cart-item">
//                   <img src={product.imageUrl} alt={product.productName} className="cart-img" />
//                   <div className="cart-info">
//                     <p className="cart-name">{product.productName}</p>
//                     <p className="cart-price">{product.price} VND</p>
//                     <p className="cart-quantity">S·ªë l∆∞·ª£ng: {product.quantity}</p>
//                   </div>
//                 </li>
//               ))}
//             </ul>
//           ) : (
//             <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong ƒë∆°n n√†y.</p>
//           )}
//         </div>
//       )}
//     </div>
//   );
// };

// export default OrderTracking;

import { useEffect, useState } from "react";
import { useSelector } from "react-redux";
import { useNavigate } from "react-router-dom"; // Import ƒëi·ªÅu h∆∞·ªõng
import "./OrderTracking.css";

const OrderTracking = () => {
  const { role } = useSelector((state) => state.user);
  const [orders, setOrders] = useState([]);
  const navigate = useNavigate(); // D√πng ƒë·ªÉ chuy·ªÉn trang

  useEffect(() => {
    if (role === "staff") {
      fetch("https://phamdangtuc-001-site1.ntempurl.com/api/Orders")
        .then((res) => res.json())
        .then((data) => {
          if (data?.$values) {
            setOrders(data.$values);
          } else {
            console.error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!");
          }
        })
        .catch((err) => console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:", err));
    }
  }, [role]);

  if (role !== "staff") return <h1 className="error">‚ö† B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h1>;

  return (
    <div className="order-tracking-container">
      <h1>üì¶ Danh S√°ch ƒê∆°n H√†ng</h1>
      {orders.length > 0 ? (
        <table className="order-table">
          <thead>
            <tr>
              <th>ID</th>
              <th>Ng∆∞·ªùi Nh·∫≠n</th>
              <th>ƒê·ªãa Ch·ªâ</th>
              <th>Ph∆∞∆°ng Th·ª©c Giao</th>
              <th>Gi√°</th>
              <th>S·ªë L∆∞·ª£ng</th>
              <th>T·ªïng Ti·ªÅn</th>
              <th>Ghi Ch√∫</th>
              <th>Chi Ti·∫øt</th>
            </tr>
          </thead>
          <tbody>
            {orders.map((order) => (
              <tr key={order.orderId}>
                <td>{order.orderId}</td>
                <td>{order.recipientName}</td>
                <td>{order.deliveryAddress}</td>
                <td>{order.shippingMethod}</td>
                <td>{order.price} VND</td>
                <td>{order.quantity}</td>
                <td>{order.totalPrice} VND</td>
                <td>{order.notes || "Kh√¥ng c√≥"}</td>
                <td>
                  <button 
                    className="bg-blue-500 text-white px-3 py-1 rounded"
                    onClick={() => navigate(`/order-detail/${order.orderId}`)}
                  >
                    Chi ti·∫øt
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      ) : (
        <p className="no-orders">üö´ Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</p>
      )}
    </div>
  );
};

export default OrderTracking;
